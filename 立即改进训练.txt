╔══════════════════════════════════════════════════════════════╗
║            模型性能改进 - 立即执行                         ║
╚══════════════════════════════════════════════════════════════╝

✅ 改进措施已完成：
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  ✓ 添加 LightGBM（更强的算法）
  ✓ 增强超参数配置（n_estimators, learning_rate, max_depth）
  ✓ 添加 log1p 目标变换（处理长尾分布）
  ✓ 创建分宿主诊断工具
  ✓ 准备4个改进训练配置

📊 当前性能：R² = 0.373（偏低）
🎯 预期提升：R² = 0.5-0.7（提升35-88%）

══════════════════════════════════════════════════════════════

🚀 立即开始（3步）

第1步：重建训练容器（添加LightGBM）
─────────────────────────────────────────────────────
cd /mnt/c/Users/xiayh17/Projects/coursepicker_starter/coursepicker/codon_verifier_ext

docker-compose -f docker-compose.microservices.yml build training

用时：2-5分钟


第2步：运行改进训练（推荐方案1）
─────────────────────────────────────────────────────
docker-compose -f docker-compose.microservices.yml run --rm training \
  --input /data/input/training_improved_lgb.json

用时：5-10分钟
输出：models/improved_lgb_model.pkl


第3步：诊断性能
─────────────────────────────────────────────────────
python3 scripts/diagnose_host_performance.py \
  --model models/improved_lgb_model.pkl \
  --data data/converted/merged_dataset.jsonl

查看各宿主的 R²、MAE、RMSE

══════════════════════════════════════════════════════════════

📋 4个改进方案

方案1：平衡训练 + LightGBM（推荐）⭐
  配置：training_improved_lgb.json
  样本：15,000（平衡各宿主）
  用时：5-10分钟
  预期：R² 0.5-0.6

方案2：平衡训练 + LightGBM + log变换
  配置：training_improved_lgb_log.json
  样本：15,000
  用时：5-10分钟
  预期：R² 0.5-0.65

方案3：主要宿主专注（E_coli/Human/Mouse）
  配置：training_improved_main_hosts.json
  样本：15,000
  用时：8-15分钟
  预期：R² 0.55-0.7

方案4：全量高容量训练
  配置：training_improved_full_lgb.json
  样本：52,031
  用时：20-40分钟
  预期：R² 0.5-0.65

══════════════════════════════════════════════════════════════

💡 一键执行（推荐流程）

# 方案1：平衡训练 + LightGBM
docker-compose -f docker-compose.microservices.yml run --rm training \
  --input /data/input/training_improved_lgb.json

# 诊断
python3 scripts/diagnose_host_performance.py \
  --model models/improved_lgb_model.pkl \
  --data data/converted/merged_dataset.jsonl

══════════════════════════════════════════════════════════════

🔍 对比新旧模型

# 旧模型诊断
python3 scripts/diagnose_host_performance.py \
  --model models/full_multihost_model.pkl \
  --data data/converted/merged_dataset.jsonl

# 新模型诊断
python3 scripts/diagnose_host_performance.py \
  --model models/improved_lgb_model.pkl \
  --data data/converted/merged_dataset.jsonl

══════════════════════════════════════════════════════════════

📚 详细文档

  改进训练指南.md  - 完整改进说明
  开始训练.md      - 基础训练指南
  RUN_TRAINING.md  - 详细运行步骤

══════════════════════════════════════════════════════════════

🎯 现在就开始改进！

复制粘贴执行：

cd /mnt/c/Users/xiayh17/Projects/coursepicker_starter/coursepicker/codon_verifier_ext && \
docker-compose -f docker-compose.microservices.yml build training && \
echo "容器构建完成！开始训练..." && \
docker-compose -f docker-compose.microservices.yml run --rm training \
  --input /data/input/training_improved_lgb.json

══════════════════════════════════════════════════════════════

